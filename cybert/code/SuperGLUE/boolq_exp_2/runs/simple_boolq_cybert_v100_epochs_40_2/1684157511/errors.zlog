{"data": "Traceback (most recent call last):\n  File \"/home/mb14sola/.local/lib/python3.7/site-packages/jiant/utils/zlog.py\", line 39, in log_context\n    yield self\n  File \"/home/mb14sola/.local/lib/python3.7/site-packages/jiant/proj/main/runscript.py\", line 172, in run_loop\n    metarunner.run_train_loop()\n  File \"/home/mb14sola/.local/lib/python3.7/site-packages/jiant/shared/metarunner.py\", line 38, in run_train_loop\n    for _ in self.yield_train_step():\n  File \"/home/mb14sola/.local/lib/python3.7/site-packages/jiant/proj/main/metarunner.py\", line 112, in yield_train_step\n    for train_state in train_iterator:\n  File \"/home/mb14sola/.local/lib/python3.7/site-packages/jiant/proj/main/runner.py\", line 76, in run_train_context\n    train_dataloader_dict=train_dataloader_dict, train_state=train_state\n  File \"/home/mb14sola/.local/lib/python3.7/site-packages/jiant/proj/main/runner.py\", line 108, in run_train_step\n    compute_loss=True,\n  File \"/home/mb14sola/.local/lib/python3.7/site-packages/jiant/proj/main/modeling/primary.py\", line 112, in wrap_jiant_forward\n    compute_loss=compute_loss,\n  File \"/home/mb14sola/.local/lib/python3.7/site-packages/torch/nn/modules/module.py\", line 889, in _call_impl\n    result = self.forward(*input, **kwargs)\n  File \"/home/mb14sola/.local/lib/python3.7/site-packages/jiant/proj/main/modeling/primary.py\", line 80, in forward\n    compute_loss=compute_loss,\n  File \"/home/mb14sola/.local/lib/python3.7/site-packages/torch/nn/modules/module.py\", line 889, in _call_impl\n    result = self.forward(*input, **kwargs)\n  File \"/home/mb14sola/.local/lib/python3.7/site-packages/jiant/proj/main/modeling/taskmodels.py\", line 84, in forward\n    input_mask=batch.input_mask,\n  File \"/home/mb14sola/.local/lib/python3.7/site-packages/jiant/proj/main/modeling/primary.py\", line 215, in encode\n    output_hidden_states=output_hidden_states,\n  File \"/home/mb14sola/.local/lib/python3.7/site-packages/transformers/models/bert/modeling_bert.py\", line 993, in forward\n    extended_attention_mask: torch.Tensor = self.get_extended_attention_mask(attention_mask, input_shape)\n  File \"/home/mb14sola/.local/lib/python3.7/site-packages/transformers/modeling_utils.py\", line 893, in get_extended_attention_mask\n    extended_attention_mask = extended_attention_mask.to(dtype=dtype)  # fp16 compatibility\nRuntimeError: CUDA error: no kernel image is available for execution on the device\n", "TIMESTAMP": 1684157515.9208343}
